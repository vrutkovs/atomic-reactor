# Stubs for docker.api.container (Python 2)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from ..utils.utils import create_networking_config as create_networking_config, create_endpoint_config as create_endpoint_config

class ContainerApiMixin:
    def attach(self, container, stdout=True, stderr=True, stream=False, logs=False): ...
    def attach_socket(self, container, params=None, ws=False): ...
    def commit(self, container, repository=None, tag=None, message=None, author=None, changes=None, conf=None): ...
    def containers(self, quiet=False, all=False, trunc=False, latest=False, since=None, before=None, limit=-1, size=False, filters=None): ...
    def copy(self, container, resource): ...
    def create_container(self, image, command=None, hostname=None, user=None, detach=False, stdin_open=False, tty=False, mem_limit=None, ports=None, environment=None, dns=None, volumes=None, volumes_from=None, network_disabled=False, name=None, entrypoint=None, cpu_shares=None, working_dir=None, domainname=None, memswap_limit=None, cpuset=None, host_config=None, mac_address=None, labels=None, volume_driver=None, stop_signal=None, networking_config=None): ...
    def create_container_config(self, *args, **kwargs): ...
    def create_container_from_config(self, config, name=None): ...
    def create_host_config(self, *args, **kwargs): ...
    def create_networking_config(self, *args, **kwargs): ...
    def create_endpoint_config(self, *args, **kwargs): ...
    def diff(self, container): ...
    def export(self, container): ...
    def get_archive(self, container, path): ...
    def inspect_container(self, container): ...
    def kill(self, container, signal=None): ...
    def logs(self, container, stdout=True, stderr=True, stream=False, timestamps=False, tail='', since=None, follow=None): ...
    def pause(self, container): ...
    def port(self, container, private_port): ...
    def put_archive(self, container, path, data): ...
    def remove_container(self, container, v=False, link=False, force=False): ...
    def rename(self, container, name): ...
    def resize(self, container, height, width): ...
    def restart(self, container, timeout=10): ...
    def start(self, container, binds=None, port_bindings=None, lxc_conf=None, publish_all_ports=None, links=None, privileged=None, dns=None, dns_search=None, volumes_from=None, network_mode=None, restart_policy=None, cap_add=None, cap_drop=None, devices=None, extra_hosts=None, read_only=None, pid_mode=None, ipc_mode=None, security_opt=None, ulimits=None): ...
    def stats(self, container, decode=None, stream=True): ...
    def stop(self, container, timeout=10): ...
    def top(self, container, ps_args=None): ...
    def unpause(self, container): ...
    def update_container(self, container, blkio_weight=None, cpu_period=None, cpu_quota=None, cpu_shares=None, cpuset_cpus=None, cpuset_mems=None, mem_limit=None, mem_reservation=None, memswap_limit=None, kernel_memory=None): ...
    def wait(self, container, timeout=None): ...

# Stubs for urllib3.connectionpool (Python 2)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any
from socket import error as SocketError, timeout as SocketTimeout
from .request import RequestMethods as RequestMethods

xrange = ... # type: Any
log = ... # type: Any

class ConnectionPool:
    scheme = ... # type: Any
    QueueCls = ... # type: Any
    host = ... # type: Any
    port = ... # type: Any
    def __init__(self, host, port=None): ...
    def __enter__(self): ...
    def __exit__(self, exc_type, exc_val, exc_tb): ...
    def close(self): ...

class HTTPConnectionPool(ConnectionPool, RequestMethods):
    scheme = ... # type: Any
    ConnectionCls = ... # type: Any
    strict = ... # type: Any
    timeout = ... # type: Any
    retries = ... # type: Any
    pool = ... # type: Any
    block = ... # type: Any
    proxy = ... # type: Any
    proxy_headers = ... # type: Any
    num_connections = ... # type: Any
    num_requests = ... # type: Any
    conn_kw = ... # type: Any
    def __init__(self, host, port=None, strict=False, timeout=..., maxsize=1, block=False, headers=None, retries=None, _proxy=None, _proxy_headers=None, **conn_kw): ...
    def close(self): ...
    def is_same_host(self, url): ...
    def urlopen(self, method, url, body=None, headers=None, retries=None, redirect=True, assert_same_host=True, timeout=..., pool_timeout=None, release_conn=None, **response_kw): ...

class HTTPSConnectionPool(HTTPConnectionPool):
    scheme = ... # type: Any
    ConnectionCls = ... # type: Any
    key_file = ... # type: Any
    cert_file = ... # type: Any
    cert_reqs = ... # type: Any
    ca_certs = ... # type: Any
    ssl_version = ... # type: Any
    assert_hostname = ... # type: Any
    assert_fingerprint = ... # type: Any
    def __init__(self, host, port=None, strict=False, timeout=..., maxsize=1, block=False, headers=None, retries=None, _proxy=None, _proxy_headers=None, key_file=None, cert_file=None, cert_reqs=None, ca_certs=None, ssl_version=None, assert_hostname=None, assert_fingerprint=None, **conn_kw): ...

def connection_from_url(url, **kw): ...
